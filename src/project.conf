subdirs=drivers
targets=crtbegin.o,crtend.o,crti.o,crtn.o,libuKernel,uKernel.bin
cppflags_force=-nostdinc -isystem ../include
as=$(CC)
asflags_force=$(CFLAGSF) $(CFLAGS) -c
cflags_force=-ffreestanding -m32
#XXX force -fno-stack-protector on OpenBSD (or fix it)
cflags=-W -Wall -g -O2 -fstack-protector
ldflags_force=-T uKernel.ld -nostdlib -static -m32
dist=Makefile,arch/i386/boot.S,arch/i386/crti.S,arch/i386/crtn.S,ssp.h,uKernel.ld

[crtbegin.o]
type=command
command=cp -f -- `$(CC) $(CFLAGSF) -print-file-name=crtbegin.o` $(OBJDIR)crtbegin.o

[crtend.o]
type=command
command=cp -f -- `$(CC) $(CFLAGSF) -print-file-name=crtend.o` $(OBJDIR)crtend.o

[crti.o]
type=object
sources=crti.S

[crtn.o]
type=object
sources=crtn.S

[libuKernel]
type=library
sources=ssp.c,stdlib.c,string.c

[uKernel.bin]
type=binary
sources=boot.S,drivers/console.c,main.c
ldflags=$(OBJDIR)crti.o $(OBJDIR)crtbegin.o $(OBJDIR)libuKernel.a $(OBJDIR)crtend.o $(OBJDIR)crtn.o
depends=$(OBJDIR)crtbegin.o,$(OBJDIR)crtend.o,$(OBJDIR)crti.o,$(OBJDIR)crtn.o,$(OBJDIR)libuKernel.a,uKernel.ld

[boot.S]
depends=arch/i386/boot.S

[crti.S]
depends=arch/i386/crti.S

[crtn.S]
depends=arch/i386/crtn.S

[drivers/console.c]
depends=drivers/console/vga.h,drivers/console/vga.c

[main.c]
depends=drivers/console.h

[ssp.c]
depends=../include/stdlib.h,ssp.h

[stdlib.c]
depends=../include/stdlib.h,../include/unistd.h

[string.c]
depends=../include/string.h
